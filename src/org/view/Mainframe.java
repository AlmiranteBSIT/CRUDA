/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.view;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.instance.DatabaseConnection;

/**
 *
 * @author aaa
 */
public class Mainframe extends javax.swing.JFrame {

    private Connection con;
    private int memberId;

    public Mainframe() {
        initComponents();
        DatabaseConnection dbc = DatabaseConnection.getDatabaseConnection();
        con = dbc.getConnection();
        setmembersTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lastnameTxtField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ageTxtField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sexTxtField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        bloodtypeTxtField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        heightTxtField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        memberTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Members Data"));
        jPanel1.setLayout(new java.awt.GridLayout(6, 2, 5, 10));

        jLabel1.setText("name");
        jPanel1.add(jLabel1);
        jPanel1.add(nameTxtField);

        jLabel2.setText("lastname");
        jPanel1.add(jLabel2);
        jPanel1.add(lastnameTxtField);

        jLabel3.setText("age");
        jPanel1.add(jLabel3);
        jPanel1.add(ageTxtField);

        jLabel4.setText("sex");
        jPanel1.add(jLabel4);
        jPanel1.add(sexTxtField);

        jLabel5.setText("bloodtype");
        jPanel1.add(jLabel5);
        jPanel1.add(bloodtypeTxtField);

        jLabel6.setText("height (inch)");
        jPanel1.add(jLabel6);
        jPanel1.add(heightTxtField);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(new java.awt.GridLayout(1, 4, 10, 0));

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        jPanel2.add(submitButton);

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel2.add(updateButton);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel2.add(deleteButton);

        resetButton.setText("Reset");
        jPanel2.add(resetButton);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        memberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        memberTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                memberTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(memberTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(418, 494));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        String name = nameTxtField.getText();
        String lastname = lastnameTxtField.getText();
        int age = Integer.parseInt(ageTxtField.getText());
        String sex = sexTxtField.getText();
        String bloodtype = bloodtypeTxtField.getText();
        String height = heightTxtField.getText();
        try {
            Statement smt = con.createStatement();
            smt.execute("insert into members(name,lastname,age,sex,bloodtype,height) values('" + name + "','" + lastname + "'," + age + ",'" + sex + "','" + bloodtype + "'," + height + ")");
            JOptionPane.showMessageDialog(this, "Record Submited");
            smt.close();
            resetData();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void memberTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_memberTableMouseClicked
        try {
            memberId = Integer.parseInt(memberTable.getValueAt(memberTable.getSelectedRow(), 0).toString());
            Statement smt = con.createStatement();
            ResultSet rs = smt.executeQuery("select * from members where id=" + memberId);
            if (rs.next()) {
                nameTxtField.setText(rs.getString(2));
                lastnameTxtField.setText(rs.getString(3));
                ageTxtField.setText(rs.getInt(4) + "");
                sexTxtField.setText(rs.getString(5));
                bloodtypeTxtField.setText(rs.getString(6));
                heightTxtField.setText(rs.getInt(7) + "");
            }
            rs.close();
            smt.close();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_memberTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if (memberId!= 0) {
            String name = nameTxtField.getText();
            String lastname = lastnameTxtField.getText();
            int age = Integer.parseInt(ageTxtField.getText());
            String sex = sexTxtField.getText();
            String bloodtype = bloodtypeTxtField.getText();
            String height = heightTxtField.getText();
            try
            {
                Statement smt = con.createStatement();
                smt.execute("update member set name='"+name+"',lastname='"+lastname+",age="+age+",sex='"+sex+"',bloodtype='"+bloodtype+"',height="+height+" where id="+memberId);
                JOptionPane.showMessageDialog(this, "Record Update");
                setmembersTableData();
                resetData();
                memberId=0;
            }
           catch(Exception ex)
           {
               JOptionPane.showMessageDialog(this, "Can not Update Record");
           }       
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if(memberId!=0)
        {
          try
          {
              Statement smt = con.createStatement();
              smt.execute("delete from members where id="+memberId);
              JOptionPane.showMessageDialog(this, "Record Deleted");
              setmembersTableData();
              resetData();
              memberId=0;
          }
          catch(Exception ex)
          {
              JOptionPane.showMessageDialog(this, "Can not Delete Record");
          }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageTxtField;
    private javax.swing.JTextField bloodtypeTxtField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField heightTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastnameTxtField;
    private javax.swing.JTable memberTable;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField sexTxtField;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

    private void resetData() {
        nameTxtField.setText("");
        lastnameTxtField.setText("");
        ageTxtField.setText("");
        sexTxtField.setText("");
        bloodtypeTxtField.setText("");
        heightTxtField.setText("");
    }

    private void setmembersTableData() {
        try {
            int rows = 0;
            int rowIndex = 0;
            Statement smt = con.createStatement();
            ResultSet rs = smt.executeQuery("select * from members order by id desc");
            if (rs.next()) {
                rs.last();
                rows = rs.getRow();
                rs.beforeFirst();
            }
            //System.out.println(rows);
            String[][] data = new String[rows][7];
            while (rs.next()) {
                data[rowIndex][0] = rs.getInt(1) + "";
                data[rowIndex][1] = rs.getString(2);
                data[rowIndex][2] = rs.getString(3);
                data[rowIndex][3] = rs.getInt(4) + "";
                data[rowIndex][4] = rs.getString(5);
                data[rowIndex][5] = rs.getString(6);
                data[rowIndex][6] = rs.getInt(7) + "";
                rowIndex++;
            }
            String[] cols = {"ID", "MEMBER NAME", "LASTNAME", "AGE", "SEX", "BLOODTYPE", "HEIGHT"};
            DefaultTableModel model = new DefaultTableModel(data, cols);
            memberTable.setModel(model);
            rs.close();
            smt.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Can Not Retrive Data");
        }
    }

}
